# Generated by Django 5.2 on 2025-04-20 02:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('Rid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'db_table': 'restaurant',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.user')),
            ],
            options={
                'db_table': 'customer',
            },
            bases=('database.user',),
        ),
        migrations.CreateModel(
            name='DeliveryP',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.user')),
                ('miles', models.IntegerField(default=0)),
                ('last_delivery_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'delivery_person',
            },
            bases=('database.user',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivery_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='database.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='database.user')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.restaurant')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('desc', models.TextField()),
                ('picture', models.CharField(blank=True, max_length=100)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.restaurant')),
            ],
            options={
                'db_table': 'item',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.customer')),
            ],
            options={
                'db_table': 'favorite',
                'unique_together': {('user', 'restaurant')},
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='favorite_restaurants',
            field=models.ManyToManyField(related_name='favored_by', through='database.Favorite', to='database.restaurant'),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.user')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='database.restaurant')),
            ],
            options={
                'db_table': 'vendor',
            },
            bases=('database.user',),
        ),
        migrations.CreateModel(
            name='RestaurantTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.restaurant')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.tag')),
            ],
            options={
                'db_table': 'restaurant_tag',
                'unique_together': {('restaurant', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='FreqAddr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequent_addresses', to='database.customer')),
            ],
            options={
                'db_table': 'frequent_address',
                'unique_together': {('user', 'address')},
            },
        ),
    ]
